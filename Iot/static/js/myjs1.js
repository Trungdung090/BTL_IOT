function updateImage() {
    fetch('/processed-image')
        .then(response => response.json())
        .then(data => {
            console.log("·∫¢nh ƒë√£ nh·∫≠n di·ªán m·ªõi nh·∫•t:", data.image_name); // Debug
            if (data.image_name !== "") {
                let imgElement = document.getElementById("latest-image");
                imgElement.src = "/uploads/" + data.image_name + "?t=" + new Date().getTime(); // Tr√°nh cache
                document.getElementById("image-container").classList.remove("hidden");
            }
        })
        .catch(error => console.error('L·ªói khi t·∫£i ·∫£nh ƒë√£ nh·∫≠n di·ªán:', error));
}

function updateLogs() {
    fetch('/access_control')
        .then(response => response.json())
        .then(data => {
            console.log("üìú D·ªØ li·ªáu logs nh·∫≠n ƒë∆∞·ª£c:", data);  // Debug
            let tableBody = document.getElementById('log-table-body');
            tableBody.innerHTML = '';     // X√≥a d·ªØ li·ªáu c≈©

            data.forEach(log => {
                let row = `<tr>
                            <td>${log.id}</td>
                            <td>${log.time}</td>
                            <td>${log.people_count}</td>
                            </tr>`;
                tableBody.innerHTML += row;
            });
        })
        .catch(error => console.log('L·ªói khi t·∫£i logs: ', error));
}

// Khi ch·ªçn ·∫£nh, hi·ªÉn th·ªã ·∫£nh ngay l·∫≠p t·ª©c tr∆∞·ªõc khi t·∫£i l√™n
document.getElementById('uploadInput').addEventListener('change', function(event) {
    let file = event.target.files[0];
    if (file) {
        let imageUrl = URL.createObjectURL(file);
        document.getElementById('uploadedImage').src = imageUrl;
        document.getElementById('uploadedImage').style.display = 'block';
    }
});

function uploadImage() {
    let input = document.getElementById('uploadInput');
    if (input.files.length === 0) {
        alert('Vui l√≤ng ch·ªçn ·∫£nh!');
        return;
    }
    let file = input.files[0];
    let formData = new FormData();
    formData.append("file", file);

    fetch('/upload', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('T·∫£i ·∫£nh th√†nh c√¥ng!');
            let imageUrl = `/uploads/${data.image_name}`; // ƒê∆∞·ªùng d·∫´n ·∫£nh t·ª´ server
            document.getElementById('uploadedImage').src = imageUrl;
            document.getElementById('uploadedImage').style.display = 'block';
        } else {
            alert('T·∫£i ·∫£nh th·∫•t b·∫°i!');
        }
    })
    .catch(error => {
        console.error('L·ªói khi t·∫£i ·∫£nh:', error);
    });
}

function resetDatabase() {
    if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a to√†n b·ªô d·ªØ li·ªáu & reset ID?")) {
        fetch('/reset_database', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
        .then(response => response.json())
        .then(data => {
            alert(data.message);
            location.reload(); // L√†m m·ªõi trang sau khi reset
        })
        .catch(error => console.error('L·ªói khi reset database:', error));
    }
}

// C·∫≠p nh·∫≠t ·∫£nh v√† log m·ªói 5 gi√¢y
setInterval(updateImage, 5000);
setInterval(updateLogs, 5000);
